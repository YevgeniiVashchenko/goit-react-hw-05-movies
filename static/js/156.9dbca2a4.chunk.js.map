{"version":3,"file":"static/js/156.9dbca2a4.chunk.js","mappings":"6QAGaA,EAAYC,EAAAA,GAAAA,IAAH,0IAQTC,EAAOD,EAAAA,GAAAA,GAAH,6EAMJE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,qEAKRI,EAAOJ,EAAAA,GAAAA,KAAH,6C,6BCMF,SAASK,IACtB,MAvBoB,WACpB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,GAAW,GADb,mBAGwBI,EAAAA,EAAAA,MAHxB,OAGUP,EAHV,OAIIC,EAASD,EAAMQ,SAJnB,gDAMIH,EAAS,EAAD,IANZ,yBAQIF,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdM,EACD,GAAE,IACI,CAAET,MAAAA,EAAOE,QAAAA,EAASE,MAAAA,EAC1B,CAGmCM,GAA1BV,EAAR,EAAQA,MAAOE,EAAf,EAAeA,QAASE,EAAxB,EAAwBA,MACxB,OACE,SAACP,EAAD,WACE,UAACL,EAAD,YACE,2CACCU,IAAW,SAAC,KAAD,CAAcS,MAAM,UAC9BP,IACA,wBACGJ,EAAMY,KAAI,SAAAC,GAAI,OACb,SAACnB,EAAD,WACE,SAACC,EAAD,CAAUmB,GAAE,kBAAaD,EAAKE,IAA9B,SACGF,EAAKG,OAASH,EAAKI,QAFbJ,EAAKE,GADH,UAY1B,C","sources":["pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nexport const Item = styled.li`\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  color: #212121;\n`;\n\nexport const Main = styled.main`\n  margin-top: 25px;\n`;","import { useState, useEffect } from 'react';\nimport { Item, ItemLink, Main } from './HomePage.styled';\nimport { getTrendingMovies } from '../../services/movies-api';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport { Container } from './HomePage.styled';\n\nconst useFetchItems = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchItems() {\n      setLoading(true);\n      try {\n        const items = await getTrendingMovies();\n        setItems(items.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchItems();\n  }, []);\n  return { items, loading, error };\n};\n\nexport default function HomePage() {\n  const { items, loading, error } = useFetchItems();\n  return (\n    <Main>\n      <Container>\n        <h1>Trending today</h1>\n        {loading && <InfinitySpin color=\"grey\" />}\n        {!error && (\n          <ul>\n            {items.map(item => (\n              <Item key={item.id}>\n                <ItemLink to={`/movies/${item.id}`}>\n                  {item.title || item.name}\n                </ItemLink>\n              </Item>\n            ))}\n          </ul>\n        )}\n      </Container>\n    </Main>\n  );\n}"],"names":["Container","styled","Item","ItemLink","Link","Main","HomePage","useState","items","setItems","loading","setLoading","error","setError","useEffect","getTrendingMovies","results","fetchItems","useFetchItems","color","map","item","to","id","title","name"],"sourceRoot":""}