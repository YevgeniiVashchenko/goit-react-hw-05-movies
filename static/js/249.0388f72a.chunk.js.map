{"version":3,"file":"static/js/249.0388f72a.chunk.js","mappings":"0SAEaA,EAAYC,EAAAA,GAAAA,IAAH,0ICATC,EAAOD,EAAAA,GAAAA,IAAH,6EAMJE,EAAQF,EAAAA,GAAAA,EAAH,8CAILG,EAAiBH,EAAAA,GAAAA,IAAH,6EAMdI,EAAOJ,EAAAA,GAAAA,KAAH,6C,oBCfJK,GAASL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,wI,SCanB,EAXiB,WAAO,IAAD,IACfO,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAC3D,OACE,UAACP,EAAD,CAAQQ,GAAIJ,EAAoBK,QAAhC,WACE,SAAC,MAAD,IADF,YAKH,ECXYC,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC1BC,EAAgEF,EAAhEE,YAAaC,EAAmDH,EAAnDG,eAAgBC,EAAmCJ,EAAnCI,aAAcC,EAAqBL,EAArBK,SAAUC,EAAWN,EAAXM,OAC7D,OACE,SAAClB,EAAD,UACmB,IAAhBY,EAAKO,SAAiBN,IACrB,iCACE,SAAC,EAAD,KACA,UAAChB,EAAD,YACE,gBACEuB,IAAG,yCAAoCN,GACvCO,IAAKN,KAEP,4BACE,wBAAKA,KACL,UAAChB,EAAD,YACE,SAACD,EAAD,2BACA,uBAAIkB,QAEN,wCACA,uBAAIC,KACJ,oCACA,uBAAIC,EAAOI,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAG7C,sBAKT,EC7BYC,GAAW9B,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,qEAKR+B,EAAQ/B,EAAAA,GAAAA,GAAH,6CCNLgC,EAAwB,WACnC,OACE,iCACE,SAACD,EAAD,sCACA,2BACE,yBACE,SAACD,EAAD,CAAUjB,GAAG,OAAb,qBAEF,yBACE,SAACiB,EAAD,CAAUjB,GAAG,UAAb,2BAGJ,oBAGL,ECec,SAASoB,IACtB,MAzBmB,WACnB,IAAQC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOpB,EAAP,KAAaqB,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOnB,EAAP,KAAcuB,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEF,GAAW,GADb,mBAGuBG,EAAAA,EAAAA,IAAcR,GAHrC,OAGUlB,EAHV,OAIIqB,EAAQrB,GAJZ,gDAMIwB,EAAS,EAAD,IANZ,yBAQID,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdI,EACD,GAAE,CAACT,IAEG,CAAElB,KAAAA,EAAMsB,QAAAA,EAASrB,MAAAA,EACzB,CAGkC2B,GAAzB5B,EAAR,EAAQA,KAAMsB,EAAd,EAAcA,QAASrB,EAAvB,EAAuBA,MAEvB,OACE,4BACGqB,IAAW,SAAC,KAAD,CAAcO,MAAM,UAChC,UAAC9C,EAAD,YACE,SAACgB,EAAD,CAAaC,KAAMA,EAAMC,MAAOA,KAChC,SAACe,EAAD,KACA,SAAC,KAAD,SAIP,C","sources":["pages/MovieDetailsPage/MovieDetailsPage.styled.js","components/MovieMarkup/MovieMarkpu.styled.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","components/MovieMarkup/MovieMarkup.jsx","components/AdditionalInformation/AdditionalInformation.styled.js","components/AdditionalInformation/AdditionalInformation.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;","import styled from 'styled-components';\n\nexport const Card = styled.div`\n  margin-top: 25px;\n  display: flex;\n  gap: 25px;\n`;\n\nexport const Score = styled.p`\n  font-weight: bold;\n`;\n\nexport const ScoreContainer = styled.div`\n  margin-top: 25px;\n  display: flex;\n  gap: 25px;\n`;\n\nexport const Main = styled.main`\n  margin-top: 25px;\n`;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const GoBack = styled(Link)`\n  padding: 4px 8px;\n  text-decoration: none;\n  outline: 1px solid;\n  border-radius: 4px;\n  color: #212121;\n`;","import { useLocation } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { MdOutlineKeyboardBackspace } from 'react-icons/md';\nimport { GoBack } from './BackLink.styled';\n\nconst BackLink = () => {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  return (\n    <GoBack to={backLinkLocationRef.current}>\n      <MdOutlineKeyboardBackspace />\n      Go back\n    </GoBack>\n  );\n};\n\nexport default BackLink;","import { Card, Score, ScoreContainer, Main } from './MovieMarkpu.styled';\nimport BackLink from 'components/BackLink/BackLink';\n\nexport const MovieMarkup = ({ item, error }) => {\n  const { poster_path, original_title, vote_average, overview, genres } = item;\n  return (\n    <Main>\n      {item.length !== 0 && !error && (\n        <>\n          <BackLink />\n          <Card>\n            <img\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt={original_title}\n            />\n            <div>\n              <h1>{original_title}</h1>\n              <ScoreContainer>\n                <Score>User Score:</Score>\n                <p>{vote_average}</p>\n              </ScoreContainer>\n              <h3>Overview: </h3>\n              <p>{overview}</p>\n              <h3>Genres</h3>\n              <p>{genres.map(genre => genre.name).join(', ')}</p>\n            </div>\n          </Card>\n          <hr />\n        </>\n      )}\n    </Main>\n  );\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  color: #212121;\n`;\n\nexport const Title = styled.h3`\n  margin-top: 25px;\n`;\n","import { ItemLink, Title } from './AdditionalInformation.styled';\n\nexport const AdditionalInformation = () => {\n  return (\n    <>\n      <Title>Additional information</Title>\n      <ul>\n        <li>\n          <ItemLink to=\"cast\">Cast</ItemLink>\n        </li>\n        <li>\n          <ItemLink to=\"reviews\">Reviews</ItemLink>\n        </li>\n      </ul>\n      <hr />\n    </>\n  );\n};","import { useParams, Outlet } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMoviesById } from 'services/movies-api';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport { Container } from './MovieDetailsPage.styled';\nimport { MovieMarkup } from 'components/MovieMarkup/MovieMarkup';\nimport { AdditionalInformation } from 'components/AdditionalInformation/AdditionalInformation';\n\nconst useFetchItem = () => {\n  const { itemId } = useParams();\n  const [item, setItem] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchItem() {\n      setLoading(true);\n      try {\n        const item = await getMoviesById(itemId);\n        setItem(item);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchItem();\n  }, [itemId]);\n\n  return { item, loading, error };\n};\n\nexport default function MovieDetailsPage() {\n  const { item, loading, error } = useFetchItem();\n\n  return (\n    <main>\n      {loading && <InfinitySpin color=\"grey\" />}\n      <Container>\n        <MovieMarkup item={item} error={error} />\n        <AdditionalInformation />\n        <Outlet />\n      </Container>\n    </main>\n  );\n}"],"names":["Container","styled","Card","Score","ScoreContainer","Main","GoBack","Link","location","useLocation","backLinkLocationRef","useRef","state","from","to","current","MovieMarkup","item","error","poster_path","original_title","vote_average","overview","genres","length","src","alt","map","genre","name","join","ItemLink","Title","AdditionalInformation","MovieDetailsPage","itemId","useParams","useState","setItem","loading","setLoading","setError","useEffect","getMoviesById","fetchItem","useFetchItem","color"],"sourceRoot":""}